Intro to SQL Development in Go

Brian Ketelsen
me@brianketelsen.com
@bketelsen

* Intro to SQL Development in Go

* Database access in Go

The standard library provides the db/sql package which is a very low level abstraction for connecting to common sql databases.

To use db/sql you have to have a database driver that implements db/sql's driver interface.

.link https://github.com/golang/go/wiki/SQLDrivers Common Drivers

Note the compatibility test at the bottom of the wiki - try to stick with drivers that pass.

* MySQL

We'll use github.com/go-sql-driver/mysql in these exercises.

.link http://go-database-sql.org/index.html Overview of db/sql 

Written by Baron Schwartz (VividCortex, Author of High Performance MySQL)

* db/sql example

Example using standard library db/sql package

github.com/bketelsen/sqlx/dbsql/main.go

* sqlx

Why sqlx?

Now that you've seen how to do it the hard way, we're going to learn how to use sqlx, which is a set of extensions on top of db/sql intended to make it easier to use without being magic or surprising.

Features that make it worthwhile:

- Marshal rows into structs (with embedded struct support), maps, and slices
- Named parameter support including prepared statements
- Get and Select to go quickly from query to struct/slice
- Just the first one is enough reason to use sqlx - scanning fields into structs is a pain in Go.
